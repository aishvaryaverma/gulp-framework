{"version":3,"sources":["app.js","custom.js"],"names":["getRoundOf","num","console","log","parseInt","checkRange","range0","range1","range2","Person","name","yearOfBirth","work","Date","getFullYear","person1","person2","family","f","m","w","d","Object","keys"],"mappings":";;AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAAC,GAAG;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACH,GAAG,GAAG,EAAP,CAAR,GAAqB,EAAjC,CAAJ;AAAA,CAAtB;;AACAD,UAAU,CAAC,EAAD,CAAV;AACAA,UAAU,CAAC,EAAD,CAAV;AACAA,UAAU,CAAC,EAAD,CAAV;AACAA,UAAU,CAAC,EAAD,CAAV;;AAEA,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAAAJ,GAAG,EAAI;AACtB,MAAMK,MAAM,GAAGF,QAAQ,CAACH,GAAG,GAAG,EAAP,CAAvB;AACA,MAAMM,MAAM,GAAID,MAAM,GAAG,EAAV,GAAgB,CAA/B;AACA,MAAME,MAAM,GAAIF,MAAM,GAAG,EAAV,GAAgB,EAA/B;;AAEA,MAAGL,GAAG,IAAIK,MAAP,IAAiBL,GAAG,GAAGM,MAA1B,EAAkC;AAC9B,WAAOL,OAAO,CAACC,GAAR,4BAAgCG,MAAM,GAAG,EAAzC,iBAAkDC,MAAlD,EAAP;AACH,GAFD,MAEO,IAAGN,GAAG,IAAIM,MAAP,IAAiBN,GAAG,GAAGO,MAA1B,EAAkC;AACrC,WAAON,OAAO,CAACC,GAAR,4BAAgCI,MAAhC,iBAA6CC,MAA7C,EAAP;AACH,GAFM,MAEA;AACH,WAAON,OAAO,CAACC,GAAR,0CAAP;AACH;AACJ,CAZD;;AAcAE,UAAU,CAAC,EAAD,CAAV;AACAA,UAAU,CAAC,EAAD,CAAV;AACAA,UAAU,CAAC,GAAD,CAAV;AACAA,UAAU,CAAC,GAAD,CAAV;AACAA,UAAU,CAAC,CAAD,CAAV;;;;;;;;;ICxBMI,M;;;AACF,kBAAYC,IAAZ,EAAkBC,WAAlB,EAA+BC,IAA/B,EAAqC;AAAA;;AACjC,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKE,IAAL,GAAYA,IAAZ;AACA,SAAKD,WAAL,GAAmBA,WAAnB;AACH;;;;0BAEK;AACF,aAAO,IAAIE,IAAJ,GAAWC,WAAX,KAA2BV,QAAQ,CAAC,KAAKO,WAAN,CAA1C;AACH;;;;;;AAEL,IAAMI,OAAO,GAAG,IAAIN,MAAJ,CAAW,OAAX,EAAoB,IAApB,EAA0B,qBAA1B,CAAhB;AACA,IAAMO,OAAO,GAAG,IAAIP,MAAJ,CAAW,OAAX,EAAoB,IAApB,EAA0B,YAA1B,CAAhB;AAEAP,OAAO,CAACC,GAAR,CAAYY,OAAZ;AACAb,OAAO,CAACC,GAAR,CAAYa,OAAZ,E,CAGA;;AACA,IAAIC,MAAM,GAAG;AACTC,EAAAA,CAAC,EAAE,GADM;AAETC,EAAAA,CAAC,EAAE,GAFM;AAGTC,EAAAA,CAAC,EAAE,GAHM;AAITC,EAAAA,CAAC,EAAE;AAJM,CAAb;AAOAnB,OAAO,CAACC,GAAR,CAAYmB,MAAM,CAACC,IAAP,CAAYN,MAAZ,CAAZ","file":"all.js","sourcesContent":["const getRoundOf = num => console.log(parseInt(num / 10) * 10);\r\ngetRoundOf(43);\r\ngetRoundOf(31);\r\ngetRoundOf(59);\r\ngetRoundOf(65);\r\n\r\nconst checkRange = num => {\r\n    const range0 = parseInt(num / 10);\r\n    const range1 = (range0 * 10) + 5;\r\n    const range2 = (range0 * 10) + 10;\r\n\r\n    if(num >= range0 && num < range1) {\r\n        return console.log(`range is between ${range0 * 10} to ${range1}`);\r\n    } else if(num >= range1 && num < range2) {\r\n        return console.log(`range is between ${range1} to ${range2}`);\r\n    } else {\r\n        return console.log(`there is some issue with calculations.`);\r\n    }\r\n}\r\n\r\ncheckRange(43);\r\ncheckRange(99);\r\ncheckRange(257);\r\ncheckRange(650);\r\ncheckRange(1); ","class Person {\r\n    constructor(name, yearOfBirth, work) {\r\n        this.name = name;\r\n        this.work = work;\r\n        this.yearOfBirth = yearOfBirth;\r\n    }\r\n\r\n    age() {\r\n        return new Date().getFullYear() - parseInt(this.yearOfBirth);\r\n    }\r\n}\r\nconst person1 = new Person('Aashu', 1993, 'Front end Developer')\r\nconst person2 = new Person('Pooja', 1994, 'Hoursewife')\r\n\r\nconsole.log(person1);\r\nconsole.log(person2);\r\n\r\n\r\n// Object.keys()\r\nvar family = {\r\n    f: 'k',\r\n    m: 'S',\r\n    w: 'P',\r\n    d: 'S'\r\n};\r\n\r\nconsole.log(Object.keys(family))"]}